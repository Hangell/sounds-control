{"version":3,"file":"index.esm.js","sources":["../src/sounds-control.ts"],"sourcesContent":["// src/sounds-control.ts\r\nexport class SoundsControl {\r\n    private context: AudioContext;\r\n    private sources: { [key: string]: AudioBufferSourceNode } = {};\r\n    private buffers: { [key: string]: AudioBuffer } = {};\r\n    private isPlaying: { [key: string]: boolean } = {};\r\n    private isLooping: { [key: string]: boolean } = {};\r\n    private startTime: { [key: string]: number } = {};\r\n    private pausedTime: { [key: string]: number } = {};\r\n    private currentlyPlaying: string | null = null;\r\n    private gainNode: GainNode;\r\n    private effectGainNode: GainNode;\r\n    private playbackRates: { [key: string]: number } = {};\r\n  \r\n    constructor() {\r\n      this.context = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n      this.gainNode = this.context.createGain();\r\n      this.gainNode.connect(this.context.destination);\r\n      this.effectGainNode = this.context.createGain();\r\n      this.effectGainNode.connect(this.context.destination);\r\n    }\r\n  \r\n    async loadSound(url: string, id: string): Promise<void> {\r\n      if (!this.buffers[id]) {\r\n        const response = await fetch(url);\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        const audioBuffer = await this.context.decodeAudioData(arrayBuffer);\r\n        this.buffers[id] = audioBuffer;\r\n      }\r\n    }\r\n  \r\n    isSoundLoaded(id: string): boolean {\r\n      return !!this.buffers[id];\r\n    }\r\n  \r\n    async play(id: string, startTime: number = 0): Promise<void> {\r\n      if (!this.isSoundLoaded(id)) {\r\n        throw new Error(`Sound ${id} not loaded`);\r\n      }\r\n      this.stop(id);\r\n      const source = this.context.createBufferSource();\r\n      source.buffer = this.buffers[id];\r\n      source.connect(this.gainNode);\r\n      source.loop = this.isLooping[id] || false;\r\n      source.playbackRate.value = this.playbackRates[id] || 1;\r\n      source.start(0, startTime);\r\n      this.sources[id] = source;\r\n      this.isPlaying[id] = true;\r\n      this.startTime[id] = this.context.currentTime - startTime;\r\n      this.currentlyPlaying = id;\r\n  \r\n      source.onended = () => {\r\n        this.isPlaying[id] = false;\r\n      };\r\n    }\r\n  \r\n    async playEffect(id: string): Promise<void> {\r\n      if (!this.isSoundLoaded(id)) {\r\n        throw new Error(`Sound ${id} not loaded`);\r\n      }\r\n      const source = this.context.createBufferSource();\r\n      source.buffer = this.buffers[id];\r\n      source.connect(this.effectGainNode);\r\n      source.playbackRate.value = this.playbackRates[id] || 1;\r\n      source.start(0);\r\n    }\r\n  \r\n    stop(id: string): void {\r\n      if (this.sources[id]) {\r\n        this.pausedTime[id] = this.context.currentTime - this.startTime[id];\r\n        this.sources[id].stop(0);\r\n        this.sources[id].disconnect();\r\n        delete this.sources[id];\r\n        this.isPlaying[id] = false;\r\n        if (this.currentlyPlaying === id) {\r\n          this.currentlyPlaying = null;\r\n        }\r\n      }\r\n    }\r\n  \r\n    loop(id: string, startTime: number = 0): void {\r\n      this.isLooping[id] = true;\r\n      this.play(id, startTime);\r\n    }\r\n  \r\n    setVolume(volume: number): void {\r\n      if (volume < 0) {\r\n        volume = 0;\r\n      } else if (volume > 1) {\r\n        volume = 1;\r\n      }\r\n      this.gainNode.gain.setValueAtTime(volume, this.context.currentTime);\r\n    }\r\n  \r\n    setEffectVolume(volume: number): void {\r\n      if (volume < 0) {\r\n        volume = 0;\r\n      } else if (volume > 1) {\r\n        volume = 1;\r\n      }\r\n      this.effectGainNode.gain.setValueAtTime(volume, this.context.currentTime);\r\n    }\r\n  \r\n    setPlaybackRate(id: string, rate: number): void {\r\n      if (this.sources[id]) {\r\n        this.sources[id].playbackRate.value = rate;\r\n      }\r\n      this.playbackRates[id] = rate;\r\n    }\r\n  \r\n    setGlobalPlaybackRate(rate: number): void {\r\n      Object.keys(this.sources).forEach(id => {\r\n        this.setPlaybackRate(id, rate);\r\n      });\r\n    }\r\n  \r\n    faster(id: string, rate: number = 1.5): void {\r\n      this.setPlaybackRate(id, rate);\r\n    }\r\n  \r\n    slow(id: string, rate: number = 0.75): void {\r\n      this.setPlaybackRate(id, rate);\r\n    }\r\n  \r\n    fasterEffect(id: string, rate: number = 1.5): void {\r\n      this.setPlaybackRate(id, rate);\r\n    }\r\n  \r\n    slowEffect(id: string, rate: number = 0.75): void {\r\n      this.setPlaybackRate(id, rate);\r\n    }\r\n  \r\n    pauseAll(): void {\r\n      Object.keys(this.sources).forEach(id => {\r\n        if (this.sources[id]) {\r\n          this.pausedTime[id] = this.context.currentTime - this.startTime[id];\r\n          this.sources[id].stop(0);\r\n          this.isPlaying[id] = false;\r\n        }\r\n      });\r\n    }\r\n  \r\n    resumeAll(): void {\r\n      if (this.currentlyPlaying && this.pausedTime[this.currentlyPlaying] !== undefined) {\r\n        this.play(this.currentlyPlaying, this.pausedTime[this.currentlyPlaying]);\r\n      }\r\n    }\r\n  }\r\n  "],"names":["SoundsControl","constructor","this","sources","buffers","isPlaying","isLooping","startTime","pausedTime","currentlyPlaying","playbackRates","context","window","AudioContext","webkitAudioContext","gainNode","createGain","connect","destination","effectGainNode","loadSound","url","id","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","isSoundLoaded","play","Error","stop","source","createBufferSource","buffer","loop","playbackRate","value","start","currentTime","onended","playEffect","disconnect","setVolume","volume","gain","setValueAtTime","setEffectVolume","setPlaybackRate","rate","setGlobalPlaybackRate","Object","keys","forEach","faster","slow","fasterEffect","slowEffect","pauseAll","resumeAll","undefined"],"mappings":"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"}